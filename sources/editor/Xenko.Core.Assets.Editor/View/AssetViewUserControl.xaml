<UserControl x:Class="Xenko.Core.Assets.Editor.View.AssetViewUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:Xenko.Core.Assets.Editor.ViewModel"
             xmlns:sskk="http://schemas.xenko.com/xaml/presentation"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:view="clr-namespace:Xenko.Core.Assets.Editor.View"
             xmlns:controls="clr-namespace:Xenko.Core.Assets.Editor.View.Controls"
             xmlns:behaviors="clr-namespace:Xenko.Core.Assets.Editor.View.Behaviors"
             xmlns:cvt="clr-namespace:Xenko.Core.Assets.Editor.View.ValueConverters"
             xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:status="clr-namespace:Xenko.Core.Assets.Editor.Components.Status.Views"
             xmlns:strings="clr-namespace:Xenko.Core.Assets.Editor.Resources.Strings"
             xmlns:templateViews="clr-namespace:Xenko.Core.Assets.Editor.Components.TemplateDescriptions.Views"
             xmlns:services="clr-namespace:Xenko.Core.Assets.Editor.Services"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModel:AssetCollectionViewModel}" Focusable="True"
             d:DesignHeight="300" d:DesignWidth="300" x:Name="AssetView" BorderThickness="1" BorderBrush="{DynamicResource MenuBorderBrush}">
  <DockPanel x:Name="RootContainer">
    <FrameworkElement.Resources>
      <ResourceDictionary>
        <!-- MERGED DICTIONARIES: IMAGE DICTIONARY, PROPERTY GRID VIEWS -->
        <ResourceDictionary.MergedDictionaries>
          <ResourceDictionary Source="CommonResources.xaml"/>
        </ResourceDictionary.MergedDictionaries>

        <Style TargetType="controls:EditableContentListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}"/>

        <Style TargetType="controls:EditableContentListBox" BasedOn="{StaticResource {x:Type ListBox}}"/>

        <DataTemplate x:Key="AssetTileView">
          <DataTemplate.Resources>
            <DataTemplate x:Key="ItemTemplate" DataType="{x:Type viewModel:ISessionObjectViewModel}">
              <HeaderedContentControl SnapsToDevicePixels="True" ToolTipService.InitialShowDelay="1">
                <i:Interaction.Behaviors>
                  <sskk:OnEventCommandBehavior EventName="MouseDoubleClick" Command="{Binding AssetDoubleClick, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}"
                                               CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=controls:EditableContentListBox}}"/>
                </i:Interaction.Behaviors>
                <HeaderedContentControl.Header>
                  <Grid Background="Transparent">
                    <Border BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2" CornerRadius="3" Margin="0,3,0,0">
                      <Image Source="{Binding ThumbnailData.Presenter, Mode=OneWay}" RenderOptions.BitmapScalingMode="Linear"
                             Width="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}"
                             Height="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}"/>
                    </Border>
                    <ProgressBar Width="32" Height="8"
                               IsIndeterminate="{Binding ThumbnailData, Mode=OneWay, Converter={sskk:Chained {sskk:ObjectToBool}, {sskk:InvertBool}}}"
                               Visibility="{Binding ThumbnailData, Mode=OneWay, Converter={sskk:Chained {sskk:ObjectToBool}, {sskk:InvertBool}, {sskk:VisibleOrCollapsed}}, FallbackValue={sskk:Collapsed}}"/>
                    <Border BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2" CornerRadius="3" Background="{StaticResource NormalBrush}"
                          HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="{Binding Sources.NeedUpdateFromSource, Converter={sskk:VisibleOrHidden}, FallbackValue={sskk:Hidden}}" Margin="0,3,0,0">
                      <Button Style="{StaticResource ImageButtonStyle}" Command="{Binding Sources.UpdateFromSourceCommand}" Margin="0">
                        <Image Source="{StaticResource UpdateSelectedAssetsFromSource}" Width="16" Height="16" Margin="-1"/>
                      </Button>
                    </Border>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,3" Command="{Binding Dependencies.ToggleIsRootOnSelectedAssetCommand, FallbackValue={x:Null}}">
                      <Button.Style>
                        <Style TargetType="Button">
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="Button">
                                <ContentPresenter ContentSource="Content"/>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </Button.Style>
                      <Grid Background="Transparent">
                        <Image Source="{StaticResource ImageAssetIsRoot}" Width="16" Height="16" Visibility="{Binding Dependencies.IsRoot, Converter={sskk:VisibleOrHidden}, FallbackValue={sskk:Hidden}}"/>
                        <Image Source="{StaticResource ImageAssetIsIndirectlyIncluded}" Width="16" Height="16" Visibility="{Binding Dependencies.IsIndirectlyIncluded, Converter={sskk:VisibleOrHidden}, FallbackValue={sskk:Hidden}}"/>
                        <Image Source="{StaticResource ImageAssetIsExcluded}" Width="16" Height="16" Visibility="{Binding Dependencies.IsExcluded, Converter={sskk:VisibleOrHidden}, FallbackValue={sskk:Hidden}}"/>
                      </Grid>
                    </Button>
                  </Grid>
                </HeaderedContentControl.Header>
                <StackPanel Background="Transparent" Width="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}" Height="48">
                  <DockPanel HorizontalAlignment="Center" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Right" Text="{Binding IsDirty, Converter={sskk:BoolToParam}, ConverterParameter=*}" HorizontalAlignment="Center"
                               VerticalAlignment="Bottom" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                    <TextBlock Text="{Binding Name, Converter={cvt:NameBreakingLine}}" TextAlignment="Center" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" MaxHeight="32"/>
                  </DockPanel>
                  <TextBlock Text="{Binding TypeDisplayName}" HorizontalAlignment="Center" TextAlignment="Center" TextTrimming="CharacterEllipsis" FontWeight="ExtraBold" />
                </StackPanel>
                <ToolTipService.ToolTip>
                  <ContentControl Content="{Binding}">
                    <FrameworkElement.Resources>
                      <!-- default template (fallback) -->
                      <DataTemplate DataType="{x:Type viewModel:SessionObjectViewModel}">
                        <StackPanel>
                          <TextBlock Text="{Binding Name, StringFormat={sskk:Localize Name: {0}}}" FontWeight="Bold"/>
                          <TextBlock Text="{Binding TypeDisplayName, StringFormat={sskk:Localize Type: {0}}}"/>
                        </StackPanel>
                      </DataTemplate>
                      <!-- asset -->
                      <DataTemplate DataType="{x:Type viewModel:AssetViewModel}">
                        <StackPanel>
                          <TextBlock Text="{Binding Url, StringFormat={sskk:Localize URL: {0}}}" FontWeight="Bold"/>
                          <TextBlock Text="{Binding TypeDisplayName, StringFormat={sskk:Localize Type: {0}}}"/>
                          <TextBlock Text="{Binding Tags, Converter={sskk:JoinStrings}, StringFormat={sskk:Localize Tags: {0}}}"  Visibility="{Binding Tags, Converter={sskk:Chained {sskk:CountEnumerable}, {sskk:NumericToBool}, {sskk:VisibleOrCollapsed}}, FallbackValue={sskk:Collapsed}}"/>
                          <StackPanel Orientation="Horizontal" Visibility="{Binding Dependencies.IsRoot, Converter={sskk:VisibleOrCollapsed}, FallbackValue={sskk:Collapsed}}">
                            <Image Source="{StaticResource ImageAssetIsRoot}" Width="16" Height="16" Margin="0,2,0,0"/>
                            <TextBlock Text="{sskk:Localize Included in build as root}"/>
                          </StackPanel>
                          <StackPanel Orientation="Horizontal" Visibility="{Binding Dependencies.IsIndirectlyIncluded, Converter={sskk:VisibleOrCollapsed}, FallbackValue={sskk:Collapsed}}">
                            <Image Source="{StaticResource ImageAssetIsIndirectlyIncluded}" Width="16" Height="16" Margin="0,2,0,0"/>
                            <TextBlock Text="{sskk:Localize Included in build as dependency}"/>
                          </StackPanel>
                          <StackPanel Orientation="Horizontal" Visibility="{Binding Dependencies.IsExcluded, Converter={sskk:VisibleOrCollapsed}, FallbackValue={sskk:Collapsed}}">
                            <Image Source="{StaticResource ImageAssetIsExcluded}" Width="16" Height="16" Margin="0,2,0,0"/>
                            <TextBlock Text="{sskk:Localize Excluded from build}"/>
                          </StackPanel>
                        </StackPanel>
                      </DataTemplate>
                      <!-- folder -->
                      <DataTemplate DataType="{x:Type viewModel:DirectoryViewModel}">
                        <StackPanel>
                          <TextBlock Text="{Binding Path, StringFormat={sskk:Localize URL: {0}}}" FontWeight="Bold"/>
                          <TextBlock Text="{Binding TypeDisplayName, StringFormat={sskk:Localize Type: {0}}}"/>
                          </StackPanel>
                      </DataTemplate>
                    </FrameworkElement.Resources>
                  </ContentControl>
                  
                </ToolTipService.ToolTip>
              </HeaderedContentControl>
            </DataTemplate>

            <DataTemplate  x:Key="EditItemTemplate" DataType="{x:Type viewModel:ISessionObjectViewModel}">
              <HeaderedContentControl>
                <HeaderedContentControl.Header>
                  <Grid>
                    <Border BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2" CornerRadius="3" Margin="0,3,0,0">
                      <Image Source="{Binding ThumbnailData.Presenter, Mode=OneWay}" RenderOptions.BitmapScalingMode="Linear"
                             Width="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}"
                             Height="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}"/>
                    </Border>
                    <ProgressBar Width="32" Height="8" IsIndeterminate="{Binding ThumbnailData, Mode=OneWay, Converter={sskk:Chained {sskk:ObjectToBool}, {sskk:InvertBool}}}"
                                 Visibility="{Binding ThumbnailData, Mode=OneWay, Converter={sskk:Chained {sskk:ObjectToBool}, {sskk:InvertBool}, {sskk:VisibleOrCollapsed}}}"/>
                  </Grid>
                </HeaderedContentControl.Header>
                <sskk:TextBox Text="{Binding Name}" Width="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}"
                              Margin="0,5,0,0" GetFocusOnLoad="True" SelectAllOnFocus="True"/>
              </HeaderedContentControl>
            </DataTemplate>
          </DataTemplate.Resources>
          <controls:EditableContentListBox ItemsSource="{Binding FilteredContent}" SelectionMode="Extended" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                           VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" TextSearch.TextPath="Name"
                                           CanEdit="{Binding CanEditAssets, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}"
                                           ItemTemplate="{StaticResource ItemTemplate}" EditItemTemplate="{StaticResource EditItemTemplate}">
            <controls:EditableContentListBox.ItemsPanel>
              <ItemsPanelTemplate>
                <sskk:VirtualizingTilePanel MaximumItemSpacing="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}, Converter={sskk:Multiply}, ConverterParameter=0.375}" MinimumItemSpacing="4"
                                            ItemSlotSize="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}, Converter={sskk:Chained {sskk:NumericToSize}, {sskk:SumSize}, Parameter1={sskk:Size 1,1}, Parameter2={sskk:Size 18,64}}}">
                  <i:Interaction.Behaviors>
                    <sskk:TilePanelNavigationBehavior/>
                  </i:Interaction.Behaviors>
                </sskk:VirtualizingTilePanel>
              </ItemsPanelTemplate>
            </controls:EditableContentListBox.ItemsPanel>
            <controls:EditableContentListBox.ItemContainerStyle>
              <Style TargetType="controls:EditableContentListBoxItem" BasedOn="{StaticResource {x:Type controls:EditableContentListBoxItem}}" d:DataContext="{d:DesignInstance viewModel:AssetViewModel}">
                <Setter Property="CanEdit" Value="{Binding IsLocked, Converter={sskk:InvertBool}}"/>
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                <Setter Property="sskk:Interaction.Behaviors">
                  <Setter.Value>
                    <sskk:BehaviorCollection>
                      <sskk:OnEventSetPropertyBehavior EventName="Validated" EventOwnerType="sskk:TextBox" Property="controls:EditableContentListBoxItem.IsEditing" Value="False"/>
                      <sskk:OnEventSetPropertyBehavior EventName="Cancelled" EventOwnerType="sskk:TextBox" Property="controls:EditableContentListBoxItem.IsEditing" Value="False"/>
                    </sskk:BehaviorCollection>
                  </Setter.Value>
                </Setter>
              </Style>
            </controls:EditableContentListBox.ItemContainerStyle>
            <i:Interaction.Behaviors>
              <sskk:ListBoxBindableSelectedItemsBehavior SelectedItems="{Binding SelectedContent}" GiveFocusOnSelectionChange="{Binding GiveFocusOnSelectionChange, ElementName=AssetView}"/>
              <behaviors:ListBoxDragDropBehavior DragVisualTemplate="{StaticResource DragVisualTemplate}"/>
              <behaviors:TilePanelThumbnailPrioritizationBehavior/>
              <behaviors:BringSelectionToViewBehavior/>
              <sskk:CommandBindingBehavior RoutedCommand="ApplicationCommands.Delete" Command="{Binding DeleteContentCommand}" IsEnabled="{Binding CanDeleteAssets, ElementName=AssetView}"/>
            </i:Interaction.Behaviors>
          </controls:EditableContentListBox>
        </DataTemplate>

        <CollectionViewSource x:Key="FilteredContentView" Source="{Binding FilteredAssets}" />

        <DataTemplate x:Key="AssetGridView">
          <view:DataGridEx ItemsSource="{Binding Source={StaticResource FilteredContentView}}" AutoCreateColumns="False" ItemScrollingBehavior="Immediate" IsTextSearchEnabled="True" TextSearch.TextPath="Name">
            <xcdg:DataGridControl.Resources>
              <sskk:BindingProxy x:Key="GridThumbnailSize" Data="{Binding GridThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}"/>
            </xcdg:DataGridControl.Resources>
            <xcdg:DataGridControl.Columns>
              <xcdg:Column FieldName="ThumbnailData" ReadOnly="True" AllowSort="False"
                         MinWidth="{Binding Data, Source={StaticResource GridThumbnailSize}, Converter={sskk:SumNum}, ConverterParameter={sskk:Double 8}}"
                         MaxWidth="{Binding Data, Source={StaticResource GridThumbnailSize}, Converter={sskk:SumNum}, ConverterParameter={sskk:Double 8}}">
                <xcdg:Column.CellContentTemplate>
                  <DataTemplate DataType="{x:Type services:ThumbnailData}">
                    <Image Margin="2" Source="{Binding Presenter, Mode=OneWay}" RenderOptions.BitmapScalingMode="Linear" SnapsToDevicePixels="True"
                                                    Width="{Binding GridThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}, Converter={sskk:SumNum}}"
                                                    Height="{Binding GridThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}, Converter={sskk:SumNum}}"/>
                  </DataTemplate>
                </xcdg:Column.CellContentTemplate>
              </xcdg:Column>
              <xcdg:Column Width="2*" FieldName="Name" Title="{sskk:Localize Name}" AllowSort="True" CellEditorDisplayConditions="RowIsBeingEdited"/>
              <xcdg:Column Width="2*" FieldName="TypeDisplayName" Title="{sskk:Localize Type}" AllowSort="True" ReadOnly="True" />
              <xcdg:Column Width="4*" FieldName="Url" Title="{sskk:Localize URL}" AllowSort="True" ReadOnly="True" />
              <xcdg:Column FieldName="Dependencies" Title="{sskk:Localize Included}" AllowSort="False" ReadOnly="True" >
                <xcdg:Column.CellContentTemplate>
                  <DataTemplate DataType="viewModel:AssetDependenciesViewModel">
                    <Grid Background="Transparent">
                      <Image Source="{StaticResource ImageAssetIsRoot}" Width="16" Height="16" Visibility="{Binding IsRoot, Converter={sskk:VisibleOrHidden}}"/>
                      <Image Source="{StaticResource ImageAssetIsIndirectlyIncluded}" Width="16" Height="16" Visibility="{Binding IsIndirectlyIncluded, Converter={sskk:VisibleOrHidden}}"/>
                      <Image Source="{StaticResource ImageAssetIsExcluded}" Width="16" Height="16" Visibility="{Binding IsExcluded, Converter={sskk:VisibleOrHidden}}"/>
                    </Grid>
                  </DataTemplate>
                </xcdg:Column.CellContentTemplate>
              </xcdg:Column>
              <xcdg:Column FieldName="IsDirty" Title="Modified" AllowSort="True" ReadOnly="True" />
            </xcdg:DataGridControl.Columns>
            <xcdg:DataGridControl.ItemContainerStyle>
              <Style TargetType="xcdg:DataRow" BasedOn="{StaticResource {x:Type xcdg:DataRow}}" d:DataContext="{d:DesignInstance viewModel:AssetViewModel}">
                <Setter Property="Height" Value="{Binding GridThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}, Converter={sskk:SumNum}, ConverterParameter={sskk:Double 8}}"/>
                <Setter Property="MinHeight" Value="26"/>
                <Setter Property="MaxHeight" Value="{x:Static system:Double.PositiveInfinity}"/>
                <Setter Property="sskk:Interaction.Behaviors">
                  <Setter.Value>
                    <sskk:BehaviorCollection>
                      <sskk:OnEventCommandBehavior EventName="MouseDoubleClick"
                                                   Command="{Binding AssetDoubleClick, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}}"
                                                   CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=controls:EditableContentListBox}}"/>
                    </sskk:BehaviorCollection>
                  </Setter.Value>
                </Setter>
              </Style>
            </xcdg:DataGridControl.ItemContainerStyle>
            <xcdg:DataGridControl.View>
              <!-- Don't forget to change TableflowViewItemsHost in TableflowView.GridElementTemplates.xaml -->
              <!--<xcdg:TableflowView ContainerHeight="{Binding GridThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AssetViewUserControl}, Converter={sskk:Chained {sskk:SumNum}, {sskk:MaxNum}, Parameter1={sskk:Double 8}, Parameter2={sskk:Double 26}}}"
                                            ScrollingAnimationDuration="0" RowFadeInAnimationDuration="0" IsColumnVirtualizationEnabled="False"/>-->
              <xcdg:TableView AllowRowResize="False" IsColumnVirtualizationEnabled="False"/>
            </xcdg:DataGridControl.View>
            <i:Interaction.Behaviors>
              <behaviors:XceedDataGridBindableSelectedItemsBehavior SelectedItems="{Binding SelectedContent}"/>
              <behaviors:XceedDataGridDragDropBehavior DragVisualTemplate="{StaticResource DragVisualTemplate}"/>
              <behaviors:XceedDataGridThumbnailPrioritizationBehavior/>
              <behaviors:XceedDataGridResizableColumnsBehavior/>
              <sskk:CommandBindingBehavior RoutedCommand="ApplicationCommands.Delete" Command="{Binding DeleteContentCommand}" IsEnabled="{Binding CanDeleteAssets, ElementName=AssetView}"/>
            </i:Interaction.Behaviors>
          </view:DataGridEx>
        </DataTemplate>

      </ResourceDictionary>
    </FrameworkElement.Resources>
    <ToolBarTray DockPanel.Dock="Top">
      <FrameworkElement.Resources>
        <Style TargetType="{x:Type Image}">
          <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
        </Style>
      </FrameworkElement.Resources>
      <ToolBar Visibility="{Binding PrimaryToolBarItems.Count, ElementName=AssetView, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:VisibleOrCollapsed}}}" ItemsSource="{Binding PrimaryToolBarItems, ElementName=AssetView}" />
      <!--  SECONDARY TOOLBAR  -->
      <ToolBar>
        <!--  NEW ASSET  -->
        <ToggleButton x:Name="Toggle" Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                      ToolTip="{sskk:Localize Add an asset to this location, Context=ToolTip}" status:ToolTipHelper.Status="{Binding Session.Editor.Status}"
                      Visibility="{Binding CanAddAssets, ElementName=AssetView, Converter={sskk:VisibleOrCollapsed}}">
          <StackPanel Orientation="Horizontal">
            <Image Source="{StaticResource ImageNewAsset}" />
            <TextBlock Text="{sskk:Localize Add asset}" Margin="2,2,4,2" VerticalAlignment="Center"/>
          </StackPanel>
          <i:Interaction.Behaviors>
            <sskk:ToggleButtonPopupBehavior/>
          </i:Interaction.Behaviors>
        </ToggleButton>
        <Popup IsOpen="{Binding IsChecked, ElementName=Toggle, Mode=TwoWay}" StaysOpen="False" AllowsTransparency="True">
          <Border MinHeight="300" Margin="6" Background="{StaticResource ControlBackgroundBrush}"
                  BorderBrush="{StaticResource NormalBrush}" BorderThickness="1">
            <Border.Effect>
              <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
            </Border.Effect>
            <templateViews:AddItemUserControl TemplateCollection="{Binding AddAssetTemplateCollection}" AddItemCommand="{Binding RunAssetTemplateCommand}"
                                              SelectFilesToCreateItemCommand="{Binding SelectFilesToCreateAssetCommand}"/>
          </Border>
          <i:Interaction.Behaviors>
            <sskk:OnEventSetPropertyBehavior EventName="Validated" EventOwnerType="sskk:FilteringComboBox" Property="{x:Static Popup.IsOpenProperty}" Value="{sskk:False}"/>
          </i:Interaction.Behaviors>
        </Popup>
        <!--  UPDATE ASSETS FROM SOURCE BUTTON  -->
        <Button Command="{Binding Session.SourceTracker.UpdateAllAssetsWithModifiedSourceCommand}"
                ToolTip="{sskk:ToolTip {sskk:Localize Update assets whose source files have changed, Context=ToolTip}, {x:Static strings:KeyGestures.UpdateAllAssetsWithModifiedSource}}" status:ToolTipHelper.Status="{Binding Session.Editor.Status}" ToolTipService.ShowOnDisabled="True"
                Visibility="{Binding CanEditAssets, ElementName=AssetView, Converter={sskk:VisibleOrCollapsed}}">
          <DockPanel>
            <TextBlock DockPanel.Dock="Right" Margin="3,0" Visibility="{Binding Session.SourceTracker.AssetsToUpdate.Count, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:VisibleOrCollapsed}}}"
                       Text="{Binding Session.SourceTracker.AssetsToUpdate.Count, StringFormat=({0})}" VerticalAlignment="Center" />
            <Grid>
              <Image Source="{StaticResource UpdateAllAssetsWithModifiedSource}"/>
              <Rectangle Fill="{StaticResource NormalBrush}" Visibility="{Binding Session.SourceTracker.AssetsToUpdate.Count, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:VisibleOrCollapsed}}}">
                <Rectangle.OpacityMask>
                  <ImageBrush ImageSource="{StaticResource UpdateAllAssetsWithModifiedSource}"/>
                </Rectangle.OpacityMask>
                <Rectangle.Triggers>
                  <EventTrigger RoutedEvent="Window.Loaded">
                    <BeginStoryboard>
                      <Storyboard RepeatBehavior="Forever">
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" BeginTime="0:0:0" AutoReverse="True"/>
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger>
                </Rectangle.Triggers>
              </Rectangle>
            </Grid>
          </DockPanel>
        </Button>
        <Button Command="{Binding Session.ImportEffectLogCommand}"
                IsEnabled="{Binding Session.ImportEffectLogPendingCount, Converter={sskk:NumericToBool}}"
                Visibility="{Binding CanEditAssets, ElementName=AssetView, Converter={sskk:VisibleOrCollapsed}}"
                ToolTip="{sskk:Localize Import last effects compiled remotely, Context=ToolTip}" status:ToolTipHelper.Status="{Binding Session.Editor.Status}" ToolTipService.ShowOnDisabled="True">
          <DockPanel>
            <TextBlock DockPanel.Dock="Right" Margin="3,0" Visibility="{Binding Session.ImportEffectLogPendingCount, Converter={sskk:Chained {sskk:IsGreater}, {sskk:VisibleOrCollapsed},  Parameter1={sskk:Double 0}}}"
                       Text="{Binding Session.ImportEffectLogPendingCount, StringFormat=({0})}" VerticalAlignment="Center" />
            <Grid>
              <Image Source="{StaticResource ImageReimportEffects}"/>
              <Rectangle Fill="{StaticResource NormalBrush}" Visibility="{Binding Session.ImportEffectLogPendingCount, Converter={sskk:Chained {sskk:IsGreater}, {sskk:VisibleOrCollapsed},  Parameter1={sskk:Double 0}}}">
                <Rectangle.OpacityMask>
                  <ImageBrush ImageSource="{StaticResource ImageReimportEffects}"/>
                </Rectangle.OpacityMask>
                <Rectangle.Triggers>
                  <EventTrigger RoutedEvent="Window.Loaded">
                    <BeginStoryboard>
                      <Storyboard RepeatBehavior="Forever">
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" BeginTime="0:0:0" AutoReverse="True"/>
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger>
                </Rectangle.Triggers>
              </Rectangle>
            </Grid>
          </DockPanel>
        </Button>
        <Separator/>
        <!--  EDIT  -->
        <Button Command="{Binding Session.EditSelectedContentCommand}" Visibility="{Binding CanEditAssets, ElementName=AssetView, Converter={sskk:VisibleOrCollapsed}}"
                ToolTip="{sskk:ToolTip {sskk:Localize Open asset in dedicated editor, Context=ToolTip}, {x:Static strings:KeyGestures.EditAsset}}" status:ToolTipHelper.Status="{Binding Session.Editor.Status}" ToolTipService.ShowOnDisabled="True">
          <Image Source="{StaticResource ImageEditAsset}" />
        </Button>
        <Separator Visibility="{Binding CanEditAssets, ElementName=AssetView, Converter={sskk:VisibleOrCollapsed}}" />
        <!-- VIEW OPTIONS -->
        <Menu Background="Transparent">
          <MenuItem StaysOpenOnClick="True" Style="{StaticResource ToolBarIconMenuItemStyle}">
            <MenuItem.Icon>
              <Image Source="{StaticResource ImageView}" MaxHeight="24" MaxWidth="24"
                     ToolTip="{sskk:Localize Asset view options, Context=ToolTip}" status:ToolTipHelper.Status="{Binding Session.Editor.Status}" ToolTipService.ShowOnDisabled="True"/>
            </MenuItem.Icon>
            <MenuItem.Resources>
              <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}" />
            </MenuItem.Resources>
            <MenuItem Header="{sskk:Localize Display, Context=Menu}" Style="{StaticResource MenuGroupWithItemsStyle}" Visibility="{Binding CanRecursivelyDisplayAssets, ElementName=AssetView, Converter={sskk:VisibleOrCollapsed}}">
              <MenuItem Header="{sskk:Localize Assets in selected folder only, Context=Menu}" IsCheckable="False"
                        Command="{Binding ChangeDisplayAssetModeCommand}" CommandParameter="{x:Static viewModel:DisplayAssetMode.AssetInSelectedFolderOnly}"
                        IsChecked="{Binding DisplayAssetMode, Mode=OneWay, Converter={sskk:IsEqualToParam}, ConverterParameter={x:Static viewModel:DisplayAssetMode.AssetInSelectedFolderOnly}}" />
              <MenuItem Header="{sskk:Localize Assets and folders in selected folder, Context=Menu}" IsCheckable="False"
                        Command="{Binding ChangeDisplayAssetModeCommand}" CommandParameter="{x:Static viewModel:DisplayAssetMode.AssetAndFolderInSelectedFolder}"
                        IsChecked="{Binding DisplayAssetMode, Mode=OneWay, Converter={sskk:IsEqualToParam}, ConverterParameter={x:Static viewModel:DisplayAssetMode.AssetAndFolderInSelectedFolder}}" />
              <MenuItem Header="{sskk:Localize Assets in selected folder and subfolders, Context=Menu}" IsCheckable="False"
                        Command="{Binding ChangeDisplayAssetModeCommand}" CommandParameter="{x:Static viewModel:DisplayAssetMode.AssetInSelectedFolderAndSubFolder}"
                        IsChecked="{Binding DisplayAssetMode, Mode=OneWay, Converter={sskk:IsEqualToParam}, ConverterParameter={x:Static viewModel:DisplayAssetMode.AssetInSelectedFolderAndSubFolder}}" />
            </MenuItem>
            <MenuItem Header="Sort by" Style="{StaticResource MenuGroupSeparatorStyle}" />
            <MenuItem Header="{sskk:Localize Name, Context=Menu}" IsCheckable="False"
                      Command="{Binding SortAssetsCommand}" CommandParameter="{x:Static viewModel:SortRule.Name}"
                      IsChecked="{Binding SortRule, Mode=OneWay, Converter={sskk:IsEqualToParam}, ConverterParameter={x:Static viewModel:SortRule.Name}}"/>
            <MenuItem Header="{sskk:Localize Date modified, Context=Menu}" IsCheckable="False"
                      Command="{Binding SortAssetsCommand}" CommandParameter="{x:Static viewModel:SortRule.ModificationDateThenName}"
                      IsChecked="{Binding SortRule, Mode=OneWay, Converter={sskk:IsEqualToParam}, ConverterParameter={x:Static viewModel:SortRule.ModificationDateThenName}}"/>
            <MenuItem Header="{sskk:Localize Type, Context=Menu}" IsCheckable="False"
                      Command="{Binding SortAssetsCommand}" CommandParameter="{x:Static viewModel:SortRule.TypeOrderThenName}"
                      IsChecked="{Binding SortRule, Mode=OneWay, Converter={sskk:IsEqualToParam}, ConverterParameter={x:Static viewModel:SortRule.TypeOrderThenName}}"/>
            <MenuItem Header="{sskk:Localize Unsaved changes, Context=Menu}" IsCheckable="False"
                      Command="{Binding SortAssetsCommand}" CommandParameter="{x:Static viewModel:SortRule.DirtyThenName}"
                      IsChecked="{Binding SortRule, Mode=OneWay, Converter={sskk:IsEqualToParam}, ConverterParameter={x:Static viewModel:SortRule.DirtyThenName}}"/>
            <MenuItem Style="{StaticResource MenuGroupWithItemsStyle}">
              <MenuItem.Header>
                <DockPanel LastChildFill="False">
                  <TextBlock DockPanel.Dock="Left" Text="View" FontWeight="Bold" />
                  <Button DockPanel.Dock="Right" Margin="4 0 0 0" Background="Transparent"
                          Command="view:AssetViewUserControl.ZoomInCommand"
                          ToolTip="{sskk:Localize Zoom in, Context=ToolTip}" status:ToolTipHelper.Status="{Binding Session.Editor.Status}" ToolTipService.ShowOnDisabled="True">
                    <Image Source="{StaticResource ImageZoomIn}"/>
                  </Button>
                  <Button DockPanel.Dock="Right" Background="Transparent"
                          Command="view:AssetViewUserControl.ZoomOutCommand"
                          ToolTip="{sskk:Localize Zoom out, Context=ToolTip}" status:ToolTipHelper.Status="{Binding Session.Editor.Status}" ToolTipService.ShowOnDisabled="True">
                    <Image Source="{StaticResource ImageZoomOut}"/>
                  </Button>
                </DockPanel>
              </MenuItem.Header>
              <MenuItem Header="{sskk:Localize Grid, Context=Menu}" CommandParameter="{StaticResource AssetGridView}">
                <MenuItem.Command>
                  <view:SetContentTemplateCommand Target="{x:Reference AssetViewPresenter}"/>
                </MenuItem.Command>
                <MenuItem.Icon>
                  <Image Grid.Column="0" Source="{StaticResource ImageShowGrid}"/>
                </MenuItem.Icon>
              </MenuItem>
              <MenuItem Header="{sskk:Localize Tiles, Context=Menu}" CommandParameter="{StaticResource AssetTileView}">
                <MenuItem.Command>
                  <view:SetContentTemplateCommand Target="{x:Reference AssetViewPresenter}"/>
                </MenuItem.Command>
                <MenuItem.Icon>
                  <Image Grid.Column="0" Source="{StaticResource ImageShowTiles}"/>
                </MenuItem.Icon>
              </MenuItem>
            </MenuItem>
          </MenuItem>
        </Menu>
        <!--  FILTER  -->
        <sskk:SearchComboBox Width="120" WatermarkContent="{sskk:Localize Add a filter...}"
                             ItemsSource="{Binding AvailableAssetFilters}" SearchText="{Binding AssetFilterPattern}" ClearTextAfterSelection="True"
                             Command="{Binding AddAssetFilterCommand}" AlternativeCommand="{Binding RefreshAssetFilterCommand}" AlternativeModifiers="Shift"
                             Grid.IsSharedSizeScope="True" x:Name="FilterSearchComboBox" status:ToolTipHelper.Status="{Binding Session.Editor.Status}"
                             ToolTip="{sskk:Localize Filter assets by name\, type or tag}" ToolTipService.ShowOnDisabled="True">
          <sskk:SearchComboBox.ItemTemplate>
            <DataTemplate>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="IconColumn"  MinWidth="17" Width="Auto" SharedSizeGroup="IconColumnGroup" />
                  <ColumnDefinition Width="Auto" SharedSizeGroup="ContentColumnGroup" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Height="16" Width="16" RenderOptions.BitmapScalingMode="HighQuality" >
                  <Image.Style>
                    <Style TargetType="{x:Type Image}" BasedOn="{StaticResource {x:Type Image}}">
                      <Setter Property="Source" Value="{StaticResource ImageNewAsset}" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsAlternative, ElementName=FilterSearchComboBox}" Value="True">
                          <Setter Property="Source" Value="{StaticResource ImageRefresh}" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Image.Style>
                </Image>
                <TextBlock Margin="4,0" Grid.Column="1" Text="{Binding Converter={cvt:AssetFilterViewModelToFullDisplayName}}" VerticalAlignment="Center" />
              </Grid>
            </DataTemplate>
          </sskk:SearchComboBox.ItemTemplate>
        </sskk:SearchComboBox>
        <Button Command="{Binding ClearAssetFiltersCommand}" Visibility="{Binding CurrentAssetFilters.Count, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:VisibleOrCollapsed}}}"
                ToolTip="{sskk:Localize Clear filters, Context=ToolTip}" status:ToolTipHelper.Status="{Binding Session.Editor.Status}" ToolTipService.ShowOnDisabled="True">
          <Image Source="{StaticResource ImageClearFilters}"/>
        </Button>
      </ToolBar>
      <!--  FILTER TAGS  -->
      <ToolBar ItemsSource="{Binding CurrentAssetFilters}" Style="{StaticResource TagToolBarStyle}" HorizontalAlignment="Stretch">
        <ToolBar.ItemTemplate>
          <DataTemplate>
            <sskk:TagControl Height="20" Margin="2" ToolTip="{Binding Converter={cvt:AssetFilterViewModelToFullDisplayName}}"
                             VerticalAlignment="Center" CloseTagCommand="{Binding RemoveFilterCommand}">
              <sskk:TagControl.Style>
                <Style TargetType="{x:Type sskk:TagControl}" BasedOn="{StaticResource {x:Type sskk:TagControl}}">
                  <Style.Triggers>
                    <!--  Background Color  -->
                    <DataTrigger Binding="{Binding Category}" Value="{x:Static viewModel:FilterCategory.AssetType}">
                      <Setter Property="Background" Value="#FFB78E4B" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Category}" Value="{x:Static viewModel:FilterCategory.AssetName}">
                      <Setter Property="Background" Value="#FF6D8E4F" />
                    </DataTrigger>
                    <!--  Opacity  -->
                    <DataTrigger Binding="{Binding IsActive}" Value="False">
                      <Setter Property="Opacity" Value="0.5" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </sskk:TagControl.Style>
              <Button Command="{Binding ToggleIsActiveCommand}" VerticalAlignment="Center">
                <Button.Template>
                  <ControlTemplate>
                    <TextBlock Margin="2,1,2,0" Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis" MaxWidth="100" VerticalAlignment="Center" />
                  </ControlTemplate>
                </Button.Template>
              </Button>
            </sskk:TagControl>
          </DataTemplate>
        </ToolBar.ItemTemplate>
      </ToolBar>
    </ToolBarTray>
    <Grid ContextMenu="{Binding AssetContextMenu, ElementName=AssetView}" Background="Transparent">
      <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False"
                  Visibility="{Binding FilteredContent.Count, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:InvertBool}, {sskk:VisibleOrCollapsed}}}">
        <TextBlock Text="{sskk:Localize No asset to display in this folder or no folder selected. Check your active filters.}"
                   HorizontalAlignment="Center" IsHitTestVisible="False"
                   Visibility="{Binding CanRecursivelyDisplayAssets, ElementName=AssetView, Converter={sskk:VisibleOrCollapsed}}"/>
        <TextBlock Text="{sskk:Localize You can also drop files here to import assets.}" HorizontalAlignment="Center" IsHitTestVisible="False"
                   Visibility="{Binding CanRecursivelyDisplayAssets, ElementName=AssetView, Converter={sskk:VisibleOrCollapsed}}"/>
      </StackPanel>
      <ContentPresenter x:Name="AssetViewPresenter" Content="{Binding}" ContentTemplate="{StaticResource AssetTileView}"
                        Visibility="{Binding FilteredContent.Count, Converter={sskk:Chained {sskk:NumericToBool}, {sskk:VisibleOrCollapsed}}}">
      </ContentPresenter>
      <i:Interaction.Behaviors>
        <behaviors:FrameworkElementDragDropBehavior CanDrag="False" UsePreviewEvents="True" CanDrop="{Binding CanAddAssets, ElementName=AssetView}"
                                                    DisplayDropAdorner="{x:Static behaviors:DisplayDropAdorner.ExternalOnly}"/>
      </i:Interaction.Behaviors>
    </Grid>
  </DockPanel>
</UserControl>
