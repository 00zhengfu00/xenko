<!-- Build file post-included by all Xenko projects -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <XenkoIsExecutable Condition=" '$(AndroidApplication)' == 'true'">true</XenkoIsExecutable>
    <XenkoNETFrameworkVersion>v2.3</XenkoNETFrameworkVersion>
  </PropertyGroup>
  
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.XML" />
    <Reference Include="System.XML.Linq" />
  </ItemGroup>

  <!-- Copy native libraries to output -->
  <Target Name="_XenkoSetupNativeLibraries" DependsOnTargets="_XenkoBuildDependencies" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <AndroidNativeLibrary Include="@(_XenkoDependencyNativeLib)"/>
    </ItemGroup>
  </Target>

  <Target Name="_XenkoEmbedNativeLibraries" Condition=" '$(XenkoIsExecutable)' == 'true'" BeforeTargets="Build">
    <!-- Expand native libraries into Content items for the different supported CPU architectures -->
    <ItemGroup>
      <!-- Note: Xamarin can automatically probe Abi using containing folder name -->
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)x86\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)x86\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)$(XenkoGraphicsApi)\x86\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)$(XenkoGraphicsApi)\x86\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)x86_64\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)x86_64\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)$(XenkoGraphicsApi)\x86_64\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)$(XenkoGraphicsApi)\x86_64\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)armeabi\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)armeabi\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)$(XenkoGraphicsApi)\armeabi\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)$(XenkoGraphicsApi)\armeabi\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)armeabi-v7a\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)armeabi-v7a\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)$(XenkoGraphicsApi)\armeabi-v7a\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)$(XenkoGraphicsApi)\armeabi-v7a\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)arm64-v8a\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)arm64-v8a\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
      <AndroidNativeLibrary Include="@(XenkoEmbeddedNativeLibrary->'%(RootDir)%(Directory)$(XenkoGraphicsApi)\arm64-v8a\%(Filename).so')" Condition="Exists('%(XenkoEmbeddedNativeLibrary.RootDir)%(XenkoEmbeddedNativeLibrary.Directory)$(XenkoGraphicsApi)\arm64-v8a\%(XenkoEmbeddedNativeLibrary.Filename).so')"/>
    </ItemGroup>
  </Target>

  <!-- Target to get signed .apk name -->
  <Target Name="GetAndroidPackage" DependsOnTargets="_ValidateAndroidPackageProperties" Returns="$(_AndroidPackage)"/>

  <!-- Register Android asset deployment task -->
  <PropertyGroup>
    <PrepareForRunDependsOn>
      $(PrepareForRunDependsOn);
      DeployAndroidCustom
    </PrepareForRunDependsOn>
  </PropertyGroup>
  
  <Target Name="DeployAndroidCustom">
    <!-- Add .bundle to list of uncompressed extensions -->
    <PropertyGroup>
      <AndroidStoreUncompressedFileExtensions>$(AndroidStoreUncompressedFileExtensions);.bundle</AndroidStoreUncompressedFileExtensions>
    </PropertyGroup>
  </Target>  
  
</Project>
