<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <XenkoNETFrameworkVersion>v1.0</XenkoNETFrameworkVersion>
  </PropertyGroup>
  
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.XML" />
    <Reference Include="System.XML.Linq" />
  </ItemGroup>

  <!-- 
  *****************************************************************************************************************************
  Handle XenkoEmbedNativeLibrary files
  *****************************************************************************************************************************
  -->

  <PropertyGroup>
    <XamarinVersion>$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Xamarin\iOS', 'InstalledVersion', '8.2.0', RegistryView.Registry32))</XamarinVersion>
    <XamarinIOSMajorVersion>$([System.Text.RegularExpressions.Regex]::Match($(XamarinVersion), `^(\d+)\.(\d+)\.`).get_Groups().get_Item(1).ToString())</XamarinIOSMajorVersion>
    <XamarinIOSMinorVersion>$([System.Text.RegularExpressions.Regex]::Match($(XamarinVersion), `^(\d+)\.(\d+)\.`).get_Groups().get_Item(2).ToString())</XamarinIOSMinorVersion>
    <!-- Let users add this if they want for now.
    <XenkoMTouchExtras>-framework OpenGLES -framework SpriteKit -framework CoreAudio -framework CoreMedia -framework CoreText -framework CoreVideo -framework AudioToolbox -framework MediaPlayer -framework GLKit</XenkoMTouchExtras>
    -->
    <XenkoMTouchExtras></XenkoMTouchExtras>
  </PropertyGroup>

  <Target Name="_XenkoSetupNativeLibraries" DependsOnTargets="_XenkoBuildDependencies" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <NativeReference Include="@(_XenkoDependencyNativeLib)">
        <Kind>Static</Kind>
      </NativeReference>
    </ItemGroup>
  </Target>

  <!-- Override PostSettings target CopyXenkoNativeLibraries. 
       Copy the libcore.a library to the project root directory for future native link. -->
  <Target Name="CopyXenkoNativeiOsLibrary" Condition=" '$(XenkoIsExecutable)' == 'true'" DependsOnTargets="_XenkoBuildDependencies" AfterTargets="ResolveAssemblyReferences">
    <PropertyGroup Condition=" '$(XenkoPlatform)' == 'iOS' ">
      <MtouchExtraArgs>$(MtouchExtraArgs) --compiler=clang -cxx -gcc_flags '-lstdc++ $(MtouchExtraArgsLibs)'</MtouchExtraArgs>
    </PropertyGroup>
  </Target>

  <!-- Deploy assets and native libraries (Xamarin iOS 8.2+ version) -->
  <Target Name="DeployAssetsiOS" DependsOnTargets="_GenerateBundleName;XenkoCompileAsset" BeforeTargets="_CollectBundleResources" Condition="'$(XenkoIsExecutable)' == 'true'">
    <!-- Add all game data as content on iphone. Note that "Link" doesn't work but Xamarin seems to use a similar "LogicalName" property. -->
    <ItemGroup>
      <!-- Define the Assets to deploy -->
      <AssetsToDeploy Include="$(XenkoCompileAssetOutputPath)\**\*.*"/>

      <BundleResource Include="@(AssetsToDeploy)" Condition="$(XamarinIOSMajorVersion) == 8 And $(XamarinIOSMinorVersion) &lt; 10">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <LogicalName>data\%(RecursiveDir)%(Filename)%(Extension)</LogicalName>
        <OptimizeImage>False</OptimizeImage>
      </BundleResource>
    
      <Content Include="@(AssetsToDeploy)" Condition="($(XamarinIOSMajorVersion) == 8 And $(XamarinIOSMinorVersion) >= 10) Or $(XamarinIOSMajorVersion) >= 9">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Link>data\%(RecursiveDir)%(Filename)%(Extension)</Link>
      </Content>
    </ItemGroup>
  </Target>
</Project>
